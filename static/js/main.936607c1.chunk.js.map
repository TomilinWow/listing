{"version":3,"sources":["utils/months.js","redux/reducers/concert-reducer.js","hooks/useActions.js","images/notfavorites.svg","images/favorites.svg","components/Home/CardItem/CardItem.jsx","components/Home/Filters/Filters.jsx","components/Home/Home.jsx","App.js","redux/store.js","index.js"],"names":["months","id","month","SET_CONCERTS","IS_FAVOURITES","IS_FAVOURITE","FILTERED_ITEMS","ADD_FILTER","initialState","listFilters","cities","isFavourites","concerts","filterConcerts","concertReducer","state","action","type","updConcerts","data","isNewData","i","length","isFavourite","Set","map","item","city","setFavourite","concert","idCard","items","payload","setIsFavourites","setConcertsAC","isFavouriteAC","changeFilters","value","dispatch","filterItems","filters","keys","Object","filteredItems","filter","obj","every","key","split","includes","getConcerts","a","localStorage","getItem","JSON","parse","axios","get","response","useActions","useDispatch","bindActionCreators","ConcertActions","CardItem","setIsFavourite","className","src","image","alt","date","onClick","favorites","notFavorites","name","Filters","useSelector","useEffect","acceptFilter","onChange","e","target","defaultValue","Home","setItem","stringify","App","reducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.936607c1.chunk.js","sourcesContent":["export const months = [\n    {id: '01', month: 'January'},\n    {id: '02', month: 'February'},\n    {id: '03', month: 'March'},\n    {id: '04', month: 'May'},\n    {id: '05', month: 'April'},\n    {id: '06', month: 'June'},\n    {id: '07', month: 'Jule'},\n    {id: '08', month: 'August'},\n    {id: '09', month: 'September'},\n    {id: '10', month: 'October'},\n    {id: '11', month: 'November'},\n    {id: '12', month: 'December'}\n]\n","import axios from \"axios\";\nimport {months} from \"../../utils/months\";\n\nconst SET_CONCERTS = 'SET_CONCERTS'\nconst IS_FAVOURITES = 'IS_FAVOURITES'\nconst IS_FAVOURITE = 'IS_FAVOURITE'\nconst FILTERED_ITEMS = 'FILTERED_ITEMS'\nconst ADD_FILTER = 'ADD_FILTER'\n\n\nconst initialState = {\n    listFilters : {\n        'city': [],\n        'month': [],\n        'isFavourite': []\n    },\n    cities: [],\n    isFavourites: false,\n    concerts: [],\n    filterConcerts: []\n}\n\nexport const concertReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_CONCERTS:\n\n            const updConcerts = [...action.data]\n            if (action.isNewData) {\n                for (let i = 0; i < updConcerts.length; i++) {\n                    updConcerts[i].isFavourite = false\n                }\n            }\n            return {\n                ...state,\n                cities: [...new Set(action.data.map(item => item.city))],\n                concerts: updConcerts,\n                filterConcerts: updConcerts\n            }\n        case IS_FAVOURITES:\n            return {\n                ...state,\n                isFavourites: !state.isFavourites,\n            }\n\n        case IS_FAVOURITE:\n\n            const setFavourite = (concert) => {\n                if (concert.id === action.idCard) {\n                    return {\n                        ...concert,\n                        isFavourite: action.isFavourite\n                    }\n                }\n                return concert\n            }\n\n            return {\n                ...state,\n                concerts: [...state.concerts].map(concert => {\n                    return setFavourite(concert)\n                }),\n                filterConcerts: [...state.filterConcerts].map(concert => {\n                    return setFavourite(concert)\n                }),\n            }\n\n        case FILTERED_ITEMS:\n            return {\n                ...state,\n                filterConcerts: action.items,\n            };\n\n        case ADD_FILTER:\n            return {\n                ...state,\n                listFilters: {...action.payload.listFilters}\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const setIsFavourites = () => ({type: IS_FAVOURITES})\nconst setConcertsAC = (data, isNewData = true) => ({type: SET_CONCERTS, data, isNewData})\nexport const isFavouriteAC = (idCard, isFavourite) => ({type: IS_FAVOURITE, idCard, isFavourite})\nconst setFilteredItems = (items) => ({type: FILTERED_ITEMS, items})\n\nexport const changeFilters = (type, value, listFilters) => {\n    return (dispatch) => {\n        if (!value){\n            listFilters[type] = []\n        } else listFilters[type] = [value]\n        dispatch({\n            type: ADD_FILTER,\n            payload: {\n                type: type,\n                value: value,\n                listFilters: listFilters\n            },\n        });\n\n    }\n}\n\n\nexport const filterItems = (concerts, filters) => {\n    return (dispatch) => {\n\n        var keys = Object.keys(filters);\n        const filteredItems = concerts.filter(function (obj) {\n            return keys.every(function (key) {\n                if (!filters[key].length) {\n                    return true;\n                } else if (key === 'month') {\n                    let month = obj['date'].split('.')[1]\n                    return filters[key].includes(month);\n                }\n                return filters[key].includes(obj[key]);\n            });\n        });\n        dispatch(setFilteredItems(filteredItems))\n\n\n    }\n\n}\n\nexport const getConcerts = () => {\n    return async (dispatch) => {\n        const data = localStorage.getItem('concerts')\n        if (data) {\n            dispatch(setConcertsAC(JSON.parse(data), false))\n        } else {\n           const response = await axios.get('https://raw.githubusercontent.com/xsolla/xsolla-frontend-school-2021/main/events.json')\n            dispatch(setConcertsAC(response.data))\n        }\n\n    }\n}","import {useDispatch} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport * as ConcertActions from '../redux/reducers/concert-reducer'\n\n\nexport const useActions = () => {\n    const dispatch = useDispatch()\n    return bindActionCreators(ConcertActions, dispatch)\n}","export default __webpack_public_path__ + \"static/media/notfavorites.405cea49.svg\";","export default __webpack_public_path__ + \"static/media/favorites.e1bc097d.svg\";","import notFavorites from '../../../images/notfavorites.svg'\nimport favorites from '../../../images/favorites.svg'\nimport './cardItem.scss'\n\nexport const CardItem = ({item, setIsFavourite}) => {\n    return <div className=\"card\">\n\n        <img className=\"cardImage\" src={`${item.image}`} alt=\"\"/>\n        <div className=\"dataCard\">\n           {item.date.split('.')[1]}\n        </div>\n        <div className=\"isFavorites\">\n            <img onClick={() => setIsFavourite(item.id, !item.isFavourite)}\n                 src={item.isFavourite ? favorites : notFavorites} alt=\"\"/>\n        </div>\n        <h2 className=\"textCard\">{item.name}</h2>\n    </div>\n}","import {months} from \"../../../utils/months\";\nimport notFavorites from \"../../../images/notfavorites.svg\";\nimport {useSelector} from \"react-redux\";\nimport {useActions} from \"../../../hooks/useActions\";\nimport {useEffect} from \"react\";\nimport './filters.scss'\n\nexport const Filters = () => {\n    const {\n        cities, isFavourites,\n        concerts, listFilters\n    } = useSelector(state => state.concert)\n\n    const {filterItems, changeFilters, setIsFavourites} = useActions()\n\n    useEffect(() => {\n        filterItems(concerts, listFilters)\n    }, [listFilters])\n\n    const acceptFilter = (type, value) => {\n        changeFilters(type, value, listFilters)\n    }\n\n    const changeIsFavourites = (type, value) => {\n        setIsFavourites()\n        acceptFilter(type, value)\n    }\n\n    return (\n        <div className=\"filters\">\n            <div>\n                <span className=\"selectorText\">City:</span>\n                <select onChange={e => {\n                    acceptFilter('city', e.target.value)\n                }} className=\"select selectorText\" defaultValue=\"\">\n                    <option value=\"\"></option>\n                    {cities.map(city => {\n                        return <option key={city} value={`${city}`}>{city}</option>\n                    })\n                    }\n                </select>\n            </div>\n            <div>\n                <div>\n                    <span className=\"selectorText\">Month:</span>\n                    <select onChange={e => {\n                        acceptFilter('month', e.target.value)\n                    }} className=\"select selectorText\" defaultValue=\"\">\n                        <option value=\"\"></option>\n                        {months.map(month => {\n                            return <option key={month.id} value={`${month.id}`}>{month.month}</option>\n                        })\n                        }\n                    </select>\n                </div>\n                <div>\n                    <button onClick={() => {changeIsFavourites('isFavourite', !isFavourites)}}\n                            className={isFavourites ? 'favorites favoritesSuccess' : 'favorites'}>\n                        <img src={`${notFavorites}`} alt=\"\"/>\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}","import './home.scss'\nimport {useSelector} from \"react-redux\";\nimport {useEffect} from \"react\";\nimport {useActions} from \"../../hooks/useActions\";\nimport {CardItem} from \"./CardItem/CardItem\";\nimport {Filters} from \"./Filters/Filters\";\n\n\nconst Home = () => {\n    const {filterConcerts, concerts} = useSelector(state => state.concert)\n    const {getConcerts, isFavouriteAC} = useActions()\n\n    useEffect(() => {\n        getConcerts()\n    }, [])\n\n    useEffect(() => {\n        if (concerts !== []) {\n            localStorage.setItem('concerts', JSON.stringify(concerts))\n        }\n    }, [concerts])\n\n    const setIsFavourite = (idCard, isFavourite) => {\n        isFavouriteAC(idCard, isFavourite)\n    }\n\n    return <div>\n        <h2 className=\"contentText\">Event Listing</h2>\n        <Filters/>\n        {filterConcerts.length !== 0\n            ? <div className=\"grid\">\n                {filterConcerts.map(item => {\n                    return <CardItem key={item.id} item={item} setIsFavourite={setIsFavourite}/>\n                })}\n            </div>\n            : <div className=\"notFound\">Not found :(</div>\n        }\n    </div>\n}\n\nexport default Home","import './App.scss';\nimport Home from \"./components/Home/Home\";\n\nfunction App() {\n    return (\n        <div className=\"wrapper\">\n            <div className=\"content\">\n                <Home/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport {concertReducer} from './reducers/concert-reducer'\nimport thunk from \"redux-thunk\";\n\nconst reducers = combineReducers({\n    concert: concertReducer\n})\n\n\nexport const store = createStore(reducers, applyMiddleware(thunk))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}